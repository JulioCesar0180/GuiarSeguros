# Generated by Django 3.1.1 on 2020-09-18 00:43

import Home.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Poll', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='BusinessManager',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rut_bm', models.CharField(max_length=12, unique=True)),
                ('fullname', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.PositiveIntegerField()),
            ],
            options={
                'verbose_name': 'Representante',
                'verbose_name_plural': 'Representantes',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_city', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Ciudad',
                'verbose_name_plural': 'Ciudades',
            },
        ),
        migrations.CreateModel(
            name='Town',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_town_t', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Comuna',
                'verbose_name_plural': 'Comunas',
            },
        ),
        migrations.CreateModel(
            name='UserGuiar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('rut', models.CharField(max_length=12, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('address', models.CharField(default='', max_length=100)),
                ('seniority', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('n_emp_hired', models.PositiveIntegerField(default=0, null=True)),
                ('n_cont_emp', models.PositiveIntegerField(default=0, null=True)),
                ('n_veh_com_light', models.PositiveIntegerField(default=0, null=True)),
                ('n_veh_com_cont', models.PositiveIntegerField(default=0, null=True)),
                ('n_veh_com_heavy', models.PositiveIntegerField(default=0, null=True)),
                ('n_veh_com_heavy_cont', models.PositiveIntegerField(default=0, null=True)),
                ('n_mach_heavy', models.PositiveIntegerField(default=0, null=True)),
                ('n_mach_heavy_cont', models.PositiveIntegerField(default=0, null=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('building', models.ManyToManyField(blank=True, to='Poll.BuildingProcess')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='Home.city')),
                ('electricity_confirmed', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='Poll.electricityconfirmed')),
                ('electricity_control', models.ManyToManyField(to='Poll.ElectricityControl')),
                ('explosive_confirmed', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='Poll.explosiveconfirmed')),
                ('explosive_control', models.ManyToManyField(to='Poll.ExplosiveControl')),
                ('general_services', models.ManyToManyField(blank=True, to='Poll.GeneralServicesProcess')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('height_confirmed', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='Poll.heightconfirmed')),
                ('height_control', models.ManyToManyField(to='Poll.HeightControl')),
                ('manager', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Home.businessmanager')),
                ('manufacture', models.ManyToManyField(blank=True, to='Poll.ManufactureProcess')),
                ('process', models.ManyToManyField(to='Poll.ProcessBusiness')),
                ('risk_management', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='Poll.riskmanagement')),
                ('risk_prevent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='Poll.riskpreventionpersonal')),
                ('sales', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Poll.sales')),
                ('substance_confirmed', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='Poll.substanceconfirmed')),
                ('substance_control', models.ManyToManyField(to='Poll.SubstanceControl')),
                ('town', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='Home.town')),
                ('transport', models.ManyToManyField(blank=True, to='Poll.TransportProcess')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
            },
            managers=[
                ('objects', Home.models.UserGuiarManager()),
            ],
        ),
        migrations.AddField(
            model_name='city',
            name='name_town',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Home.town'),
        ),
    ]
